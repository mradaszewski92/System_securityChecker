#!/bin/bash


#############################################################################################
#											  			 								    #
#  System_secCheck									    									#
#  ----------------									    									#
#  Author: Marcin Radaszewski								    							#
#  GitHub   : https://github.com/							    							#
#  "System_secCheck" comes with ABSOLUTELY NO WARRANTY. This is free software, and you are  #
#  welcome to redistribute it under the terms of the GNU General Public License.	    	#
#  											    											#	
#############################################################################################

OK="[\033[32mOK\e[0m]"
WAR="[\033[31m!\e[0m]"
INFO="[\033[32m*\e[0m]"
LINE="--------------------------------------"


HEADER() {
	echo ""
	echo -e "----------- $1 $2  ------------" 
    echo ""
}

DEBUG() {
		echo -e $1 $2
	
}

dirCheckSum() {

	HEADER $INFO "CHECK TMP DIR" 	
	if [ -e "/$1" ];then
		DEBUG $INFO "$1 ALREADY EXIST"
		DEBUG $INFO "CHECK /$1 DIR"
		if [ -e "log" ];then
			HEADER $INFO "VERIFIES CHECKSUM"
			DIFF=$(diff -q log log1)
			if [ "$DIFF" != "" ];then
				DEBUG $WAR "INCORRECT CHECKSUM"
			else
				DEBUG $OK "CHECKSUM VALID"
			fi
		
		else
			DEBUG $WAR "CREATE CHECKSUM"
			echo $(du -sh /tmp 2>/dev/null |awk '{print $1}' | sha1sum | awk '{print $1}') $1 >> log
		fi
	else
		DEBUG $WAR "DIR DOESN'T EXIST"
		fi
}

findHiddenFile() {
	DOT="."

	HEADER $INFO "CHECK $1 DIRECTORY"

	if [ -n $PATH ];then

		PATH1=${PATH}
		envPath=$(echo "${PATH1}" | tr ':' ' ')	

		for dir in "tmp var //etc//passwd";do
			# ls -l -d .[!.]?* | awk '{print $9}'
			
			HIDDEN_FILE=$(find $DOT -name ".*" -print)
			
			if [ "$HIDDEN_FILE" != "" ] && [ "$HIDDEN_FILE" != "." ];then
				
				DEBUG $WAR "FOUND SUSPICIUS HIDDEN FILE/S"
				
				for file in $HIDDEN_FILE;do
					DEBUG "\t$WAR" "SUSPICIOUS FILE: $file"
				done

			# if [ -n $(find "/usr/" -maxdepth 1 -name ".*" 2>/dev/null)  ];then
			#	HEADER $INFO "CHECKING HIDDEN FILE"	
			#	DEBUG $WAR "Warning, some hidden/s file in Your /usr DIR"
			#   $HIDDEN_FILES = $(ls -l -d .[!.]?* | awk '{print $9}')
					
			else
				DEBUG $INFO "NO HIDDEN FILE/S" 
				DEBUG $OK "PATH OK"
				
			fi
		done
	fi
}

dirCheckSum "tmp"
findHiddenFile
echo ""
HEADER $INFO "CHECK SYSTEM CONFIGURATION"
echo "[*] Host_name       	:" $(hostname)
echo "[*] Os_version      	:" $(uname -v)
echo "[*] Architecture    	:" $(uname -m)
echo "[*] Kernel          	:" $(uname -r) | sed 's/-.*//'
echo "[*] OS_FULLNAME	 	:" $(grep "^VERSION_ID=" /etc/os-release | awk -F= '{print $2}' |tr -d '"')
echo "[*] OS    				:" $(grep "^VERSION=" /etc/os-release | awk -F= '{print $2}' |tr -d '"')
echo "[*] Default Shell  	:" $SHELL

echo "--------------[*] Generate raport from NMAP[*]--------------"


# TO DO: CHECK NETWORK
#  nmap -n -sS $ip -oX /usr/share/scan/$(date +"%m-%d-%y")

